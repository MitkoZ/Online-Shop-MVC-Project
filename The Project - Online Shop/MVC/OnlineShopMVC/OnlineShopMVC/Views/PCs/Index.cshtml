@using OnlineShopMVC.ViewModels
@using OnlineShopMVC.Helpers;
@model SearchViewModel<PCsViewModel>
@{
    ViewBag.Title = "Index";
    var SetPagerItemVisibility = new Func<bool, string>(isVisible => (isVisible) ? "" : "visibility:hidden");
}

@if (Model.SearchItems.Count==0)
{
    <h2>
        No results found
    </h2>
}
else
{
    <h1>@Model.SearchItems[0].CategoryType</h1>
}
@if (LoginUserSession.Current.isAdmin)
{
    <div class="table-actions">
        @Html.ActionLink("Add New Computer", "Edit", "PCs", null, new { @class = "btn btn-primary btn-sm" })
    </div>
}
<div>
    Found @Model.TotalItemsCount @Model.SearchItems[0].CategoryType
</div>
@using (Html.BeginForm("Index", "PCs", FormMethod.Get))
{
    <span> @Model.SearchItems[0].CategoryType keywords: </span>
    @Html.TextBox("keywords", Request.QueryString["keywords"])
    @Html.Hidden("categoryID", Model.SearchItems[0].CategoryID)
    <input type="submit" value="Search" class="btn btn-primary btn-sm normal-button"/>
}

<div class="btn-group">
    @Html.ActionLink("Name", "Index", new { sortColumn = "Name", direction = Model.LastSortColumn == "Name" && Model.LastSortDirection != "Desc" ? "Desc" : "", Name = Request.QueryString["Name"], categoryID = Request.QueryString["CategoryID"], keywords = Request.QueryString["keywords"] }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Price", "Index", new { sortColumn = "Price", direction = Model.LastSortColumn == "Price" && Model.LastSortDirection != "Desc" ? "Desc" : "", Name = Request.QueryString["Price"], categoryID = Request.QueryString["CategoryID"], keywords = Request.QueryString["keywords"] }, new { @class = "btn btn-primary" })
</div>
    @foreach (PCsViewModel item in Model.SearchItems)
    {

        <table width="100">
            <tr width="30">
                <td>
                    <a href="@Url.Action("Details","PCs",new RouteValueDictionary(new { id = item.ProductId }))">
                        <img src="@Url.Content(item.ImagePath)" width="150" height="150" />
                    </a>
                </td>
                <td>
                    @item.PCsInfo
                </td>
                <td style="font-size:30px; color:red;">
                    @item.Price leva
                </td>
            </tr>
            @if (LoginUserSession.Current.isAdmin)
                {
                <tr>
                    <td class="cell-small">
                        @Html.ActionLink("Edit", "Edit", "PCs", new { ProductId = item.ProductId }, new { @class = "btn btn-primary btn-sm" })
                    </td>
                    <td class="cell-small">
                        @Html.ActionLink("Delete", "Delete", "PCs", new { id = item.ProductId }, new { onclick = "return confirm('Are you sure you want to delete this item?');", @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        </table>
    }
    <div>
        <ul class="pager">
            <li style="@SetPagerItemVisibility(Model.HasFirstPage)">
                @Html.ActionLink(" << ", "Index", new { pageIndex = 1, categoryID = Request.QueryString["categoryID"], sortColumn = Model.LastSortColumn, direction = Model.LastSortDirection })
            </li>

            <li style="@SetPagerItemVisibility(Model.HasPrevPage)">
                @Html.ActionLink(" < ", "Index", new { pageIndex = Model.CurrentPageIndex - 1, categoryID = Request.QueryString["categoryID"], sortColumn = Model.LastSortColumn, direction = Model.LastSortDirection })
            </li>

            <li>
                <span>Page @Model.CurrentPageIndex of @Model.TotalPagesCount</span>
            </li>

            <li style="@SetPagerItemVisibility(Model.HasNextPage)">
                @Html.ActionLink(" > ", "Index", new { pageIndex = Model.CurrentPageIndex + 1, categoryID = Request.QueryString["categoryID"], sortColumn = Model.LastSortColumn, direction = Model.LastSortDirection })
            </li>

            <li style="@SetPagerItemVisibility(Model.HasLastPage)">
                @Html.ActionLink(" >> ", "Index", new { pageIndex = Model.TotalPagesCount, categoryID = Request.QueryString["categoryID"], sortColumn = Model.LastSortColumn, direction = Model.LastSortDirection })
            </li>
        </ul>
    </div>
